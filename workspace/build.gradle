buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.example.workspace' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'workspace'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mc_mapping_channel, version: mc_mapping_version

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                workspace {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                workspace {
                    source sourceSets.main
                }
            }
        }
    }
}

// workspace mod has a runtime dependency an all the other enabled projects
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    parent.childProjects.each {
        name, proj -> {
            if (name == project.name) {
                // skip self
            } else {
                println "Including a dependency for module ${name}"
                runtimeClasspath(proj) { transitive = true }
            }
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "workspace",
            "Specification-Vendor": "workspace",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"workspace",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// The below could be in the parent build.gradle rather than here.

// If running unquialified task name, only run the workspace version
['runClient', 'runServer'].each { taskName -> {
    parent.tasks.create(taskName) {
        doFirst {
            parent.childProjects.each { name, proj -> {
                proj.tasks.each { task -> {
                    if (name != 'workspace' && task.name == taskName) {
                        task.enabled = false
                    }
                }}
            }}
        }
    }
}}
